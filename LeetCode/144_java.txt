/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void helper(List<Integer> res,TreeNode root)
    {
        if(null==root)
        return;
        res.add(root.val);
        helper(res,root.left);
        helper(res,root.right);
    }
    
    public List<Integer> preorderTraversal(TreeNode root) {
        // List<Integer> res=new ArrayList();
        // helper(res,root);
        // return res;
        Stack<TreeNode> stk=new Stack();
        List<Integer> res=new ArrayList();
        stk.push(root);
        while(!stk.isEmpty())
        {
            TreeNode t=stk.pop();
            if(null==t)
            continue;
            res.add(t.val);
            stk.push(t.right);
            stk.push(t.left);
        }
        return res;
    }
}