public class Solution {
    public int maxProfit(int k, int[] prices) {
        // int res=0;
        // if(prices.length>0&&k>0)
        // {
        //     k=Math.min(k,prices.length/2);
        //     int[][][] dp=new int[prices.length][k][2];
        //     for(int i=0;i<k;i++)
        //     dp[0][i][0]=-prices[0];
        //     for(int i=1;i<prices.length;i++)
        //     {
        //         dp[i][0][0]=Math.max(dp[i-1][0][0],-prices[i]);
        //         dp[i][0][1]=Math.max(dp[i-1][0][1],dp[i-1][0][0]+prices[i]);
        //         for(int j=1;j<k;j++)
        //         {
        //             dp[i][j][0]=Math.max(dp[i-1][j][0],dp[i-1][j-1][1]-prices[i]);
        //             dp[i][j][1]=Math.max(dp[i-1][j][1],dp[i-1][j][0]+prices[i]);
        //         }
        //         res=res>dp[i][k-1][1]?res:dp[i][k-1][1];
        //     }
        // }
        // return res;
        int res=0;
        if(prices.length>0&&k>0)
        {
            if(k<prices.length/2)
            {
                int[][] dp=new int[k][2];
                for(int i=0;i<k;i++)
                dp[i][0]=-prices[0];
                for(int i=1;i<prices.length;i++)
                {
                    //int t=Math.min(i/2+1,k);
                    for(int j=k-1;j>0;j--)
                    {
                        dp[j][1]=Math.max(dp[j][1],dp[j][0]+prices[i]);
                        dp[j][0]=Math.max(dp[j][0],dp[j-1][1]-prices[i]);
                        //res=res>dp[j][1]?res:dp[j][1];
                    }
                    dp[0][1]=Math.max(dp[0][1],dp[0][0]+prices[i]);
                    dp[0][0]=Math.max(dp[0][0],-prices[i]);
                    res=res>dp[k-1][1]?res:dp[k-1][1];
                }
            }
            else
            {
                int t1=prices[0];
                for(int i=1;i<prices.length;i++)
                {
                    int t2=prices[i];
                    if(t2>t1)
                    res+=t2-t1;
                    t1=t2;
                }
            }
        }
        return res;
    }
}