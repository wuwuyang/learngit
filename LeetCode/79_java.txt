public class Solution {
    public boolean dfs(boolean[][] flag,char[][] board,int x,int y,String word,int index)
    {
        //System.out.println(x+" "+y+" "+index);
        if(index==word.length())
        return true;
        if(x<0||y<0||x>=board.length||y>=board[0].length||flag[x][y]||board[x][y]!=word.charAt(index))
        {
            return false;
        }
        int dir[][]={{1,0},{-1,0},{0,1},{0,-1}};
        flag[x][y]=true;
        for(int i=0;i<4;i++)
        {
            int tx=x+dir[i][0],ty=y+dir[i][1];
            if(dfs(flag,board,tx,ty,word,index+1))
            return true;
        }
        flag[x][y]=false;
        return false;
    }
    
    public boolean exist(char[][] board, String word) {
        if(board.length==0||board[0].length==0)
        return false;
        boolean flag[][]=new boolean[board.length][board[0].length];
        for(int i=0;i<board.length;i++)
        {
            for(int j=0;j<board[0].length;j++)
            {
                if(dfs(flag,board,i,j,word,0))
                return true;
            }
        }
        return false;
    }
}