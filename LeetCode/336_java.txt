public class Solution {
    public boolean isPalind(String c)
    {
        int i=0,j=c.length()-1;
        while(i<j)
        {
            if(c.charAt(i)!=c.charAt(j))
            return false;
            i++;
            j--;
        }
        return true;
    }
    
    public List<List<Integer>> palindromePairs(String[] words) {
        List<List<Integer>> res=new ArrayList<List<Integer>>();
        Map<String,Integer> map=new HashMap<String,Integer>();
        
        for(int i=0;i<words.length;i++)
        {
            map.put(words[i],i);
        }
        
        for(int i=0;i<words.length;i++)
        {
            int l=0,r=0;
            boolean flag=false;
            while(l<=r)
            {
                String s1=words[i].substring(l,r);
                Integer j=map.get(new StringBuilder(s1).reverse().toString());
                if(l==0&&j!=null&&j!=i&&isPalind(words[i].substring(r)))
                {
                    List<Integer> temp=new ArrayList<Integer>();
                    temp.add(i);
                    temp.add(j);
                    res.add(temp);
                }
                if(l>0&&j!=null&&j!=i&&isPalind(words[i].substring(0,l)))
                {
                    List<Integer> temp=new ArrayList<>();
                    temp.add(j);
                    temp.add(i);
                    res.add(temp);
                }
                if(r<words[i].length())
                r++;
                else
                l++;
            }
        }
        
        return res;
    }
}
