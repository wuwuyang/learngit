public class Solution {
    public List<Integer> findMinHeightTrees(int n, int[][] edges) {
        List<Set<Integer>> node_ngh=new ArrayList();
        List<Integer> res=new ArrayList();
        boolean[] flag=new boolean[n];
        for(int i=0;i<n;i++)
        {
            node_ngh.add(new HashSet<Integer>());
        }
        for(int i=0;i<edges.length;i++)
        {
            node_ngh.get(edges[i][0]).add(edges[i][1]);
            node_ngh.get(edges[i][1]).add(edges[i][0]);
        }
        int tnum=n;
        List<Integer> list=new ArrayList();
        while(tnum>2)
        {
            list.clear();
            for(int i=0;i<n;i++)
            {
                if(!flag[i]&&node_ngh.get(i).size()==1)
                {
                    flag[i]=true;
                    list.add(i);
                    tnum--;
                }
            }
            for(int i=0;i<list.size();i++)
            {
                for(int j:node_ngh.get(list.get(i)))
                {
                    node_ngh.get(j).remove(list.get(i));
                }
            }
        }
        for(int i=0;i<n;i++)
        {
            if(!flag[i])
            res.add(i);
        }
        return res;
    }
}