// Java Iterator interface reference:
// https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html
class PeekingIterator implements Iterator<Integer> {
    Integer temp;
    Iterator<Integer> iter;

	public PeekingIterator(Iterator<Integer> iterator) {
	    // initialize any member here.
	    temp=null;
	    iter=iterator;
	}

    // Returns the next element in the iteration without advancing the iterator.
	public Integer peek() {
        if(temp!=null)
        return temp;
        else
        {
            temp=iter.next();
            return temp;
        }
	}

	// hasNext() and next() should behave the same as in the Iterator interface.
	// Override them if needed.
	@Override
	public Integer next() {
	    if(temp!=null)
	    {
	        int t=temp;
	        temp=null;
	        return t;
	    }
	    return iter.next();
	}

	@Override
	public boolean hasNext() {
	    if(temp!=null)
	    return true;
	    return iter.hasNext();
	}
}