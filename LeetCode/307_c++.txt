class NumArray {
public:
    vector<int> c;
    vector<int> a;
    
    int lowbit(int x)
    {
        return x&-x;
    }
    
    void add(int i,int value)
    {
        while(i<c.size())
        {
            c[i]+=value;
            i+=lowbit(i);
        }
    }
    
    int getSum(int i)
    {
        int res=0;
        while(i>0)
        {
            res+=c[i];
            i-=lowbit(i);
        }
        return res;
    }

    NumArray(vector<int> &nums) {
        a=nums;
        c.resize(nums.size()+1);
        for(int i=0;i<nums.size();i++)
        {
            add(i+1,nums[i]);
        }
    }

    void update(int i, int val) {
        int t=val-a[i];
        add(i+1,t);
        a[i]=val;
    }

    int sumRange(int i, int j) {
        return getSum(j+1)-getSum(i);
    }
};


// Your NumArray object will be instantiated and called as such:
// NumArray numArray(nums);
// numArray.sumRange(0, 1);
// numArray.update(1, 10);
// numArray.sumRange(1, 2);