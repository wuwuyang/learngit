/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        ListNode slow=head;
        ListNode fast=head;
        while(true)
        {
            if(fast!=null&&fast.next!=null&&fast.next.next!=null)
            {
                fast=fast.next.next;
                slow=slow.next;
            }
            else
            return null;
            if(slow==fast)
            break;
        }
        ListNode begin=head;
        while(begin!=slow)
        {
            begin=begin.next;
            slow=slow.next;
        }
        return begin;
    }
}