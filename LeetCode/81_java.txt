public class Solution {
    public boolean search(int[] nums, int target) {
        int left=0,right=nums.length-1;
        while(left<right)
        {
            // if(nums[left]==nums[right])
            // {
            //     return nums[left]==target;
            // }
            // else
            int mid=(left+right)/2;
            if(nums[mid]==target)
            return true;
            else if(nums[left]==nums[right])
            {
                int t=nums[left];
                if(t==target)
                return true;
                while(left<nums.length&&nums[left]==t)
                left++;
                while(right>=0&&nums[right]==t)
                right--;
            }
            else if(nums[left]>nums[right])
            {
                if(nums[left]<nums[mid])
                {
                    if(target>=nums[left]&&target<nums[mid])
                    right=mid-1;
                    else
                    left=mid+1;
                }
                else if(nums[left]>nums[mid])
                {
                    if(target>nums[mid]&&target<=nums[right])
                    left=mid+1;
                    else
                    right=mid-1;
                }
                else
                left=mid+1;
            }
            else
            {
                if(target>nums[mid])
                left=mid+1;
                else
                right=mid-1;
            }
        }
        if(left>=0&&left<nums.length&&nums[left]==target)
        return true;
        if(right>=0&&right<nums.length&&nums[right]==target)
        return true;
        return false;
    }
}