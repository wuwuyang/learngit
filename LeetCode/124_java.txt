/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    int res=0x80000000;
    
    public Integer helper(TreeNode root)
    {
        if(root==null)
        return 0;
        int t1=helper(root.left);
        int t2=helper(root.right);
        int t3=root.val+t1;
        int t4=root.val+t2;
        int t5=t3+t4-root.val;
        int t6=root.val;
        if(root.left==null&&root.right==null)
        {
            t1=root.val;
            t2=root.val;
        }
        else if(root.left==null)
        {
            t1=t2;
        }
        else if(root.right==null)
        {
            t2=t1;
        }
        else
        t1=Math.max(t1,t2);
        t1=Math.max(t1,t5);
        t3=Math.max(t3,t4);
        t3=Math.max(t3,t6);
        t1=Math.max(t1,t3);
        if(t1>res)
        res=t1;
        return t3;
    }
    
    public int maxPathSum(TreeNode root) {
        helper(root);
        return res;
    }
}