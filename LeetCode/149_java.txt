/**
 * Definition for a point.
 * class Point {
 *     int x;
 *     int y;
 *     Point() { x = 0; y = 0; }
 *     Point(int a, int b) { x = a; y = b; }
 * }
 */
public class Solution {
    public Double calK(Point p1,Point p2)
    {
        if(p1.y==p2.y)
        return 0.0;
        return (1.0*(p1.y-p2.y))/(p1.x-p2.x);
    }
    
    public int maxPoints(Point[] points) {
        if(points.length==0)
        return 0;
        int res=1;
        for(int i=0;i<points.length;i++)
        {
            int t1=1;
            int t2=1;
            int tres=0;
            Map<Double,Integer> map=new HashMap();
            for(int j=i+1;j<points.length;j++)
            {
                if(points[i].x==points[j].x)
                {
                    t1++;
                    if(points[i].y==points[j].y)
                    t2++;
                    continue;
                }
                Double k=calK(points[i],points[j]);
                Integer t=map.get(k);
                if(null==t)
                t=0;
                t++;
                map.put(k,t);
                if(t>tres)
                tres=t;
                //System.out.println(i+" "+j+" "+k+" "+t);
            }
            if(tres+t2>res)
            res=tres+t2;
            if(t1>res)
            res=t1;
        }
        return res;
    }
}