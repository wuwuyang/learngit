class Solution {
public:
    vector<int> findMinHeightTrees(int n, vector<pair<int, int>>& edges) {
        vector<set<int>> vec(n);
        for(auto t:edges)
        {
            vec[t.first].insert(t.second);
            vec[t.second].insert(t.first);
        }
        set<int> vertices;
        for(int i=0;i<n;i++)
        vertices.insert(i);
        while(vertices.size()>2)
        {
            vector<int> leafs;
            for(auto t:vertices)
            {
                if(vec[t].size()==1)
                {
                    leafs.push_back(t);
                }
            }
            for(auto t:leafs)
            {
                int t1=*(vec[t].begin());
                vec[t1].erase(t);
                vertices.erase(t);
            }
        }
        vector<int> res;
        if(n<1)
        return res;
        for(auto t:vertices)
        res.push_back(t);
        return res;
    }
};