/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void dfs(List<List<Integer>> res,List<Integer> cur,TreeNode root,int curSum,int sum)
    {
        if(root==null)
        {
            return;
        }
        curSum+=root.val;
        cur.add(root.val);
        if(root.left!=null&&root.right!=null)
        {
            dfs(res,cur,root.left,curSum,sum);
            dfs(res,cur,root.right,curSum,sum);
        }
        else if(root.left!=null)
        {
            dfs(res,cur,root.left,curSum,sum);
        }
        else if(root.right!=null)
        {
            dfs(res,cur,root.right,curSum,sum);
        }
        else
        {
            if(curSum==sum)
            {
                res.add(new ArrayList(cur));
            }
        }
        cur.remove(cur.size()-1);
        return;
    }
    
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> res=new ArrayList();
        dfs(res,new ArrayList<Integer>(),root,0,sum);
        return res;
    }
}