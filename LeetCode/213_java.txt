public class Solution {
    public int rob(int[] nums) {
        if(nums.length==0)
        return 0;
        int dp1[][]=new int[nums.length][2];
        int dp2[][]=new int[nums.length][2];
        int res=nums[0];
        if(nums.length>2)
        {
            dp1[2][0]=0;
            dp1[2][1]=nums[2];
            for(int i=3;i<nums.length-1;i++)
            {
                dp1[i][0]=Math.max(dp1[i-1][0],dp1[i-1][1]);
                dp1[i][1]=nums[i]+dp1[i-1][0];
            }
            res=nums[0]+Math.max(dp1[nums.length-2][0],dp1[nums.length-2][1]);
        }
        if(nums.length>1)
        {
            dp2[1][0]=0;
            dp2[1][1]=nums[1];
            for(int i=2;i<nums.length;i++)
            {
                dp2[i][0]=Math.max(dp2[i-1][0],dp2[i-1][1]);
                dp2[i][1]=nums[i]+dp2[i-1][0];
            }
            res=Math.max(res,Math.max(dp2[nums.length-1][0],dp2[nums.length-1][1]));
        }
        return res;
    }
}