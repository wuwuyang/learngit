class Solution(object):
    def palindromePairs(self, words):
        """
        :type words: List[str]
        :rtype: List[List[int]]
        """
        wmap = {y : x for x, y in enumerate(words)}
        def isPalindrome(word):
            i,j=0,len(word)-1
            while i<j:
                if word[i]!=word[j]:
                    return False
                i+=1
                j-=1
            return True
            
            
        ans=set()
        for idx,word in enumerate(words):
            if "" in wmap and word!="" and isPalindrome(word):
                idx2=wmap[""]
                ans.add((idx2,idx))
                ans.add((idx,idx2))
            rword=word[::-1]
            if rword in wmap:
                if word!=rword:
                    tidx=wmap[rword]
                    ans.add((idx,tidx))
            for i in range(1,len(word)):
                t1=word[:i]
                t2=word[i:]
                t3=t1[::-1]
                t4=t2[::-1]
                if isPalindrome(t1) and t4 in wmap:
                    ans.add((wmap[t4],idx))
                if isPalindrome(t2) and t3 in wmap:
                    ans.add((idx,wmap[t3]))
        return list(ans)
                    
